version: "3.8"

services:
  base_api:
    build:
      context: ./
      dockerfile: ./deploy/app/base/Dockerfile
    command: make run_prod
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/usr/src/app/static
    depends_on:
      - redis
      - rabbitmq

  redis:
      image: redis:alpine
      restart: always
      ports:
        - 6379:6379
      volumes:
        - redis_data:/data

  rabbitmq:
    image: rabbitmq:3.9.13-management-alpine
    restart: on-failure
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/

  celery:
    restart: always
    depends_on:
      - base_api
      - rabbitmq
    build:
      context: ./
      dockerfile: ./deploy/app/base/Dockerfile
    command: make celery_prod

  nginx:
    build:
      context: ./deploy/nginx/
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - base_api
    volumes:
      - static_volume:/usr/src/app/static


  eth_node:
    build:
      context: ./
      dockerfile: ./deploy/app/node/Dockerfile
    command: make run_parser_prod
    depends_on:
      - rabbitmq

  sockets:
    build:
      context: ./
      dockerfile: ./deploy/app/sockets/Dockerfile
    ports:
      - "8001:8001"
    depends_on:
      - base_api
    command: make run_sockets_prod

  ibay:
    build:
      context: ./
      dockerfile: ./deploy/app/ibay/Dockerfile
    ports:
      - "8005:8005"
    depends_on:
      - rabbitmq
      - base_api
    command: make run_ibay_prod

volumes:
  static_volume:
  redis_data:

