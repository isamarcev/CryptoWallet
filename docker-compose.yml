version: "3.8"

services:
  base_api:
    build:
      context: ./
      dockerfile: ./deploy/app/base/Dockerfile
    command: poetry run uvicorn base_api.config.app:app --host 0.0.0.0 --reload
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/usr/src/app/static
    depends_on:
      - redis
      - rabbitmq

  redis:
      image: redis:alpine
      ports:
        - 6379:6379

  rabbitmq:
    image: rabbitmq:3.9.13-management-alpine
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/

#  celery:
#    restart: always
#    depends_on:
#      - base_api
#      - redis
#    build:
#      context: deploy/app
#      dockerfile: deploy/app/Dockerfile.base
#    command:
#      - make celery
#
#  nginx:
#    build:
#      context: ./deploy/nginx
#      dockerfile: Dockerfile
#    ports:
#      - "80:80"
#    depends_on:
#      - base_api
#    volumes:
#      - static_volume:/usr/src/app/static
#
#  rabbitmq:
#    image: rabbitmq:3.9.27-management-alpine
##    run?
#
#  eth_node:
#    build:
#      context: deploy/app
#      dockerfile: deploy/app/Dockerfile.base
#    command:
#      - make run_parser
#    depends_on:
#      - rabbitmq
#
#  sockets:
#    build:
#      context: deploy/app
#      dockerfile: deploy/app/Dockerfile.base
#    ports:
#      - "8001:8001"
#    depends_on:
#      - rabbitmq
#    command:
#      - make run_sockets
#
#  ibay:
#    build:
#      context: deploy/app
#      dockerfile: deploy/app/Dockerfile.base
#    ports:
#      - "8005:8005"
#    depends_on:
#      - rabbitmq
#      - db
#      - base_api
#    command:
#      - make run_ibay
#
volumes:
  static_volume:
#  postgres_data:



#      - ./deploy/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
